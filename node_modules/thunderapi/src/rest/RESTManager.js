const Request = require("./Request");
const HTMLParser = require("../util/HTMLParser");
const { Error } = require("../errors");
const { EndPoints, URLs } = require("../util/Constants");

class RESTManager {
  request(method = "get", endpoint, ...args) {
    return new Promise((resolve, reject) => {
      if (!(endpoint in EndPoints)) return reject(new Error("INVALID_ENDPOINT"));
      let url;
      switch (endpoint.toLowerCase()) {
        case EndPoints.user:
          url = `${URLs[endpoint]}/?nick=${args.join(" ")}`;
          break;
        case EndPoints.clan:
          url = `${URLs[endpoint]}/${args.join(" ")}`;
          break;
        case EndPoints.news:
          url = URLs[endpoint];
          break;
        case EndPoints.wiki:
          url = `${URLs[endpoint]}/index.php?title=Special:Search&search=${args.join("+")}&fulltext=Search`;
          break;
      }
      const request = new Request(url, method);
      return request.gen().end((err, res) => {
        if (err) return reject(err);
        try {
          const parser = new HTMLParser(res.body, endpoint);
          const parsed = parser.parse();
          return resolve(parsed);
        } catch (error) {
          return reject(error);
        }
      });
    });
  }
}

module.exports = RESTManager;