const { register } = require("./ThunderAPIError");

const Messages = {
  // Constructor
  INVALID_CONSTRUCTOR_OPTION: (prop, must) => `The ${prop} option must be ${must}`,

  // Generic
  NOT_FOUND: type => `The ${type} was not found`,
  SERVER_RESPONSE: resp => `The server responded with ${resp}`,
  INVALID_QUERY: (query, type) => `The ${query} must be a ${type}`,
  USER_UNAVAILABLE: `The requested user does not exist or was unavailable`,
  PAGE_NUMBER: `The page number must be an integer`,
  INVALID_OPTION: "An invalid option was provided",

  // Endpoints
  INVALID_ENDPOINT: `The used endpoint was invalid`,

  // HTMLParser
  INVALID_TYPE: "The selected type was invalid"
};

for (const [name, message] of Object.entries(Messages)) register(name, message);